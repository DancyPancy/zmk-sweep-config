/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 * Edited by DancyPancy
 *
 * Notes:
 * shorten time for alpha2 macro
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

#define alpha 0 
#define alpha2 1
#define nav 2
#define num 3
#define sys 4
#define sym1 5
#define sym2 6

&mt {
	flavor = "tap-preferred";
};

/ { 
    behaviors {
		// behaviors
		http: hold-tap-tap-preferred {
			compatible = "zmk,behavior-hold-tap";
			label = "HOLD_TAP_TAP_PREFERRED";
			flavor = "tap-preferred";
			#binding-cells = <2>;
			tapping-term-ms = <100>;
			bindings = <&kp>, <&kp>;
		};

		slnq: sticky_layer_no_quick_release {
			compatible = "zmk,behavior-sticky-key";
			label = "STICKY_KEY_QUICK_RELEASE";
			#binding-cells = <1>;
			bindings = <&mo>;
			release-after-ms = <800>;
			ignore-modifiers;
			quick-release;
		};

		reklt: repeat_key_layertap {
			compatible = "zmk,behavior-hold-tap";
			label = "REPEAT_KEY_LAYERTAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo>, <&key_repeat>;
		};

		mha2: mh_alpha2 {
			compatible = "zmk,behavior-hold-tap";
			label = "MOMENTARY_HOLD_ALPHA2_TAP";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo>, <&salpha2>;
		};

		mhsym1: mh_sybmol {
			compatible = "zmk,behavior-hold-tap";
			label = "MOMENTARY_HOLD_SYMBOL1_TAP";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			bindings = <&mo>, <&ssymbol1>;
		};

		// Tap Dances
    	cxp: copy_cut_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "COPY_CUT_PASTE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&http LC(X) LC(C)>, <&kp LC(V)>;
        };

	  	pnp: play_next_previous {
            compatible = "zmk,behavior-tap-dance";
            label = "PLAY_NEXT_PREVIOUS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };	

	  	btscroll: bluetooth_scroll {
            compatible = "zmk,behavior-tap-dance";
            label = "BLUETOOTH_SCROLL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&bt BT_NXT>, <&bt BT_PRV>, <&bt BT_CLR>;
        };			

		// Mod Morphs
		dotcmma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COMMA";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

    };

	macros {

		highline: highlight_line {
            label = "HIGHLIGHT_LINE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
				<&macro_tap &kp END>,
				<&macro_press &kp LSHIFT>,
				<&macro_tap &kp HOME>;
        };

		salpha2: sticky_alpha2 {
			label = "STICKY_ALPHA2";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
            bindings = 
				<&macro_tap &sl alpha2>;
		};

		ssymbol1: sticky_symbol1 {
			label = "STICKY_SYMBOL1";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
            bindings = 
				<&macro_tap &sl sym1>;
		};
	};

    combos {
        compatible = "zmk,combos";

		esc {
			timeout-ms = <50>;
			key-positions = <11 12>;
			bindings = <&kp ESCAPE>;
			layers = <alpha alpha2>;
		};
		
		bkspc {
			timeout-ms = <30>;
			key-positions = <17 18>;
			bindings = <&kp BACKSPACE>;
			layers = <alpha alpha2 num>;
		};

		ctrlbkspc {
			timeout-ms = <30>;
			key-positions = <16 17 18>;
			bindings = <&kp RC(BACKSPACE)>;
			layers = <alpha alpha2 num>;
		};

		delete {
			timeout-ms = <30>;
			key-positions = <16 17>;
			bindings = <&kp DEL>;
			layers = <alpha alpha2 num>;
		};
    };

	keymap {
		compatible = "zmk,keymap";
		//   ╭────────────────────╮ ╭────────────────────╮
        //   │  0   1   2   3   4 │ │  5   6   7   8   9 │
        //   │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
        //   │ 20  21  22  23  24 | | 25  26  27  28  29 │
        //   ╰───────────╮ 30  31 │ │ 32  33 ╭───────────╯
        //               ╰────────╯ ╰────────╯     

		/*0*/
		alpha {
			bindings = <
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&none			&none			&none			&none				&none			&none			&none			&none			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&kp L			&kp G			&kp D			&none				&none			&kp H			&kp U			&kp O			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&mt LSFT C		&kp R 			&kp S			&kp T			&none				&none			&kp N			&kp E			&kp A			&mt RSHFT I
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   												   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		/*	   												   |			  ||      (repeat)|	   |		(sym1)||	  (alpha2)|													*/
		/**/													&lt sys SPACE	&reklt sym2 N0 		&mhsym1 num N0	&mha2 nav N0
		/*	   												   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
			>;
		};

		/*1*/
		alpha2 {
			bindings = <
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&none			&none			&none			&none				&none			&none			&none			&none			&none 
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&kp V			&kp W			&kp M			&none				&none			&kp F			&dotcmma		&kp Z			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&mt LSHFT Q		&kp J			&kp P			&kp K			&none				&none			&kp B			&kp APOS		&kp X			&mt RSHFT Y 
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   												   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		/*	   												   |			  ||			  |	   |			  || layer (tap)  |													*/
		/**/													&trans			&trans				&trans			&to alpha1
		/*	   												   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
			>;
		};
		
		/*2*/
		nav {
			bindings = <
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&none			&none			&none			&none				&none			&none			&none			&none			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&trans			&trans			&trans			&none				&none			&kp LEFT		&kp UP			&kp RIGHT		&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&trans			&trans			&trans			&trans			&none				&none			&kp HOME		&kp DOWN		&kp END			&trans
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/* 													   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		/* 													   |			  ||			  |	   |			  || layer (hold) |													*/
		/**/													&kp LGUI		&trans				&trans			&trans
		/* 													   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
			>;
		};

		/*3*/
		num {
			bindings = <
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&none			&none			&none			&none				&none			&none			&none			&none			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&kp HASH		&kp TILDE		&kp N5			&none				&none			&kp N6			&dotcmma		&kp PRCNT		&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&mt LSHFT N1	&kp N2			&kp N3			&kp N4			&none				&none			&kp N7			&kp N8			&kp N9			&mt RSHFT N0
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*													   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		/*													   |			  || 			  |	   | layer (hold) || 			  |													*/
		/**/													&kp LGUI		&kp LG(LSHFT)		&trans			&trans
		/*													   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
			>;
		};

		/*4*/
		sys { 
			bindings = <
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||	using sk doesn't work I want you to be able to tap a bunch of modifiers and only press when the next non modifier is pressed		  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&pnp			&kp LC(Z)		&kp LC(LS(Z))	&none				&none			&bt BT_PRV		&bt BT_NXT		&trans			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&sk LSHFT		&sk LCTRL		&sk ALT			&kp TAB			&none				&none			&trans			&trans			&trans			&btscroll
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   												   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		/*	   												   | layer (hold) ||			  |	   |			  || 			  |													*/
		/**/													&trans			&trans				&trans			&trans
		/*	   												   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
			>;
		};

		/*5*/
		sym1 {
			bindings = <
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&none			&none			&none			&none				&none			&none			&none			&none			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&kp CARET		&kp PIPE		&kp DOLLAR		&none				&none			&kp LPAR		&kp LBRC		&kp SEMI		&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&trans			&kp ASTRK		&kp BSLH		&kp FSLH		&none				&none			&kp LBKT		&kp UNDER		&kp COLON		&kp QMARK
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   												   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		/*	   												   |			  ||			  |	   | layer (tap)  || 			  |													*/
		/**/													&trans			&trans				&trans			&trans
		/*	   												   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
			>;
		};

		/*6*/
		sym2 {
			bindings = <
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&none			&none			&none			&none				&none			&none			&none			&none			&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&none			&kp LT			&kp GT			&kp EXCL		&none				&none			&kp RPAR		&kp RBRC		&kp RC(S)		&none
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		/*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		/**/	&kp EQUAL		&kp PLUS		&kp MINUS		&cxp			&none				&none			&kp RBKT		&kp AMPS		&kp AT			&kp GRAVE
		/*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		/*	   												   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		/*	   												   |			  || layer (hold) |	   | (keep this)  || 			  |													*/
		/**/													&kp ENTER		&trans				&trans			&trans
		/*	   												   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
			>;
		};

		// /*#*/
		// blank {
		// 	bindings = <
		// /*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		// /*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		// /**/	&none			&none			&none			&none			&none				&none			&none			&none			&none			&none
		// /*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		// /*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		// /*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		// /**/	&none			&trans			&trans			&trans			&none				&none			&trans			&trans			&trans			&none
		// /*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		// /*	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮╭──────────────╮ */
		// /*	   |			  ||			  ||			  ||			  ||			  |	   |			  ||			  ||			  ||			  ||			  | */
		// /**/	&trans			&trans			&trans			&trans			&none				&none			&trans			&trans			&trans			&trans
		// /*	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯╰──────────────╯ */
		// /*	   												   ╭──────────────╮╭──────────────╮	   ╭──────────────╮╭──────────────╮
		// /*	   												   |			  ||			  |	   |			  || 			  |													*/
		// /**/													&trans			&trans				&trans			&trans
		// /*	   												   ╰──────────────╯╰──────────────╯	   ╰──────────────╯╰──────────────╯													*/
		// 	>;
		// };

	};
};  