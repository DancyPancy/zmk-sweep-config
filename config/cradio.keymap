/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
   flavor = "balanced";
   tapping-term-ms = <200>;
};

/ { 
    behaviors {
		
    };

    combos {
        compatible = "zmk,combos";
	
		base_layer {
	    	timeout-ms = <50>;
            key-positions = <31 32>;
            bindings = <&to 0>;
		};
	
		base_layer2 {
	    	timeout-ms = <50>;
            key-positions = <33 34>;
            bindings = <&to 0>;
		};

		caps_lock {
			timeout-ms = <50>;
			key-positions = <21 30>;
			bindings = <&kp CAPSLOCK>;
		};
	
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

	keymap {
		compatible = "zmk,keymap";
			
		alpha_layer {
			bindings = <
				&kp Q       &kp W  &kp F  &kp P  &kp B				&kp J &kp L  &kp U     &kp Y    &kp SEMI 
				&kp A       &kp R  &kp S  &kp T  &kp G				&kp M &kp N  &kp E     &kp I    &kp O
				&mt LSFT Z  &kp X  &kp C  &kp D  &kp V				&kp K &kp H  &kp CMMA  &kp DOT  &mt RSFT APOS
									&to 1  &lt 2 SPACE				&mo 3 &to 4 
			>;
		};	

       	num_layer {
			bindings = <
				&kp MINUS  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp PLUS				&kp NUM_6  &kp NUM_7  &kp NUM_8  &kp NUM_9  &kp NUM_0 
				&kp ASTRK  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp PRCNT				&kp MINUS  &kp EQL    &kp LBKT   &kp RBKT   &kp DEL 
				&kp FSLH   &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT				&kp MINUS  &kp GRAVE  &kp LBKT   &kp RBKT   &kp DEL 
												&kp KP_N0  &kp SPACE				&kp RGUI &mo 2 
			>;
		};
		
		right_layer {
			bindings = <
				&kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp RPRN 
				&kp HASH  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp BKSP
				&kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
												&kp ENTER &kp LCTL  				&kp SPC  &mo 2 
			>;
		};	
		
		tri_layer {
			bindings = <
				&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
				&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
				&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
							&trans &trans  					&trans &trans 
			>;
		};	
	};
};
